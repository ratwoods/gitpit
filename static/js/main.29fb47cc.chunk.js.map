{"version":3,"sources":["components/Cards.js","components/Cardlist.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Cards","name","email","id","className","alt","src","Cardlist","Robot","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterendRobots","filter","robot","toLowerCase","includes","length","Searchbox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAaeA,EAXD,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAA1B,mBACf,sBAAKC,UAAU,KAAf,UACC,6BAAKH,IACL,4BAAIC,WCcMK,EAnBC,SAAC,GAAW,IAAVC,EAAS,EAATA,MAEjB,OACC,qBAAKJ,UAAU,KAAf,SAEEI,EAAMC,KAAI,SAACC,EAAKC,GACf,OACC,cAAC,EAAD,CAECR,GAAIK,EAAMG,GAAGR,GACbF,KAAMO,EAAMG,GAAGV,KACfC,MAAOM,EAAMG,GAAGT,OAHXS,SCGGC,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCCI,EARA,SAACC,GACf,OACC,qBAAKC,MAAQ,CAACC,UAAU,SAAUC,OAAO,kBAAkBC,OAAO,SAAlE,SACEJ,EAAMK,YCiBKC,E,kDAnBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHM,E,8DAOAC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAIG,KAAKJ,MAAMC,SACR,0DAEAG,KAAKX,MAAMK,a,GAhBOQ,aCgDZC,G,wDAxCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACZlB,MAAO,GACPK,YAAY,IAJD,E,gEAQO,IAAD,OAClByB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAAEvB,MAAOkC,S,+BAO9B,IAAD,EACwBZ,KAAKJ,MAA5BlB,EADD,EACCA,MAAOK,EADR,EACQA,YACT8B,EAAkBnC,EAAMoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEtD,OAAQtC,EAAMwC,OAGd,cAAC,WAAD,UACC,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC6C,EAAD,CAAWnC,aAAcgB,KAAKI,iBAC/B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,MAAOmC,aARrB,6C,GAzBgBX,cCGHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.29fb47cc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Cards = ({name, email, id}) => {\r\n\t\treturn(\r\n\t\t\t<div className='tc bg-light-green dib br4 pa3 ma3 grow bw1 shadow-5'>\r\n\t\t\t\t<img alt='' src={`https://robohash.org/${id}?size=200x200`}/>\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<p>{email}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\nexport default Cards;\r\n\r\n","import React from 'react';\r\nimport Cards from './Cards';\r\n\r\nconst Cardlist= ({Robot})=>{\r\n\t\r\n\treturn(\r\n\t\t<div className='tc'>\r\n\t\t  {\r\n\t\t\t\tRobot.map((user,i)=> {\r\n\t\t\t\t\treturn( \r\n\t\t\t\t\t\t<Cards \r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tid={Robot[i].id} \r\n\t\t\t\t\t\t\tname={Robot[i].name} \r\n\t\t\t\t\t\t\temail={Robot[i].email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tplaceholder='search robots'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style= {{overflowY:'scroll', border:'1px solid black',height:'800px' }}>\r\n\t \t{props.children}\r\n\t \t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError){\r\n\t\t\treturn<h1>Oooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component, Fragment} from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tRobot: [],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response=> response.json())\r\n\t\t\t.then(users =>this.setState({ Robot: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) =>{\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { Robot, searchfield } = this.state;\r\n\t\tconst filterendRobots = Robot.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn !Robot.length ? \r\n\t\t<h1>loading</h1> :\r\n\t\t(\r\n\t\t<Fragment>\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className='f1'>Robotfriends</h1>\r\n\t\t\t\t\t<Searchbox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<Cardlist Robot={filterendRobots}/>\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t  )\r\n\t}\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}